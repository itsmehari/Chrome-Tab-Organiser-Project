"use strict";const saveSessionBtn=document.getElementById("save-session-btn"),sessionNameInput=document.getElementById("session-name"),sessionList=document.getElementById("session-list"),saveSettingsBtn=document.getElementById("save-settings-btn"),autoOrganizeToggle=document.getElementById("auto-organize-toggle"),groupColorSelect=document.getElementById("group-color-select"),chunkSizeInput=document.getElementById("chunk-size-input"),shortcutsBtn=document.getElementById("shortcuts-btn"),resetSettingsBtn=document.getElementById("reset-settings-btn"),clearDataBtn=document.getElementById("clear-data-btn");function displaySavedSessions(){chrome.storage.local.get("savedSessions",({savedSessions:e})=>{sessionList.innerHTML="",e&&e.length>0?e.forEach(e=>{const s=document.createElement("div");s.className="session-item",s.innerHTML=`\n          <span>\n            <strong>${e.name}</strong>\n            <br>\n            <small>${e.tabs.length} tabs - ${new Date(e.timestamp).toLocaleString()}</small>\n          </span>\n          <div>\n            <button class="btn btn-secondary restore-session-btn" data-timestamp="${e.timestamp}">Restore</button>\n            <button class="btn btn-danger delete-session-btn" data-timestamp="${e.timestamp}">Delete</button>\n          </div>\n        `,sessionList.appendChild(s)}):sessionList.innerHTML="<p>No sessions saved yet.</p>"})}function loadSettings(){chrome.storage.local.get("taborg_settings",({taborg_settings:e})=>{e&&(autoOrganizeToggle.value=e.autoOrganize||"false",groupColorSelect.value=e.groupColor||"grey",chunkSizeInput.value=e.chunkSize||"")})}async function handleSaveSession(){const e=sessionNameInput.value.trim();if(!e)return void alert("Please enter a name for the session.");const s=await chrome.tabs.query({}),t={name:e,timestamp:Date.now(),tabs:s.map(e=>({url:e.url,pinned:e.pinned,active:e.active,groupId:e.groupId}))};chrome.storage.local.get("savedSessions",({savedSessions:e=[]})=>{e.unshift(t),chrome.storage.local.set({savedSessions:e},()=>{sessionNameInput.value="",displaySavedSessions(),alert("Session saved successfully!")})})}async function handleRestoreSession(e){if(!e.target.classList.contains("restore-session-btn"))return;const s=Number(e.target.dataset.timestamp);chrome.storage.local.get("savedSessions",({savedSessions:e})=>{const t=e.find(e=>e.timestamp===s);if(t){chrome.windows.create({url:t.tabs.map(e=>e.url)});const n=e.filter(e=>e.timestamp!==s);chrome.storage.local.set({savedSessions:n},displaySavedSessions)}})}function handleDeleteSession(e){if(!e.target.classList.contains("delete-session-btn"))return;if(!confirm("Are you sure you want to delete this session?"))return;const s=Number(e.target.dataset.timestamp);chrome.storage.local.get("savedSessions",({savedSessions:e})=>{const t=e.filter(e=>e.timestamp!==s);chrome.storage.local.set({savedSessions:t},displaySavedSessions)})}document.addEventListener("DOMContentLoaded",()=>{displaySavedSessions(),loadSettings(),saveSessionBtn.addEventListener("click",handleSaveSession),sessionList.addEventListener("click",e=>{handleRestoreSession(e),handleDeleteSession(e)}),saveSettingsBtn.addEventListener("click",()=>{const e={autoOrganize:autoOrganizeToggle.value,groupColor:groupColorSelect.value,chunkSize:chunkSizeInput.value?parseInt(chunkSizeInput.value,10):null};chrome.storage.local.set({taborg_settings:e},()=>{alert("Settings saved!")})}),shortcutsBtn.addEventListener("click",()=>{chrome.tabs.create({url:"chrome://extensions/shortcuts"})}),resetSettingsBtn.addEventListener("click",()=>{confirm("Are you sure you want to reset all settings to their defaults?")&&chrome.storage.local.remove("taborg_settings",()=>{loadSettings(),alert("Settings have been reset.")})}),clearDataBtn.addEventListener("click",()=>{confirm("Are you sure you want to permanently delete ALL saved sessions and groups? This cannot be undone.")&&chrome.storage.local.remove(["savedSessions","savedGroups"],()=>{displaySavedSessions(),alert("All saved data has been cleared.")})})});